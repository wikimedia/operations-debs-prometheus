#!/usr/bin/make -f
# -*- Mode: makefile -*-

export DH_VERBOSE=1
export DH_GOPKG := github.com/prometheus/prometheus
# Include test fixtures.
export DH_GOLANG_INSTALL_EXTRA := discovery/file/fixtures \
    storage/local/fixtures config/testdata promql/testdata retrieval/testdata \
    promql/fuzz-data
# Do not build examples.
export DH_GOLANG_EXCLUDES := documentation vendor
# Use the golang-1.8-go binaries directly.
export PATH := /usr/lib/go-1.8/bin:$(PATH)

BUILDDIR := build
METAPKG := github.com/prometheus/common

# Taken and modified from the project's Makefile.

DEBVERS    ?= $(shell dpkg-parsechangelog -SVersion)
VERSION    ?= $(shell echo '$(DEBVERS)' | sed 's/^[[:digit:]]*://; s/[-].*//')
DEBPKGNAME ?= $(shell dpkg-parsechangelog -SSource)
DEBDATE    ?= $(shell dpkg-parsechangelog -SDate)
REV        := $(DEBVERS)
BRANCH     := debian/sid
USER       := pkg-go-maintainers@lists.alioth.debian.org
HOSTNAME   := debian
BUILD_DATE := $(shell date --utc --date='$(DEBDATE)' +%Y%m%d-%H:%M:%S)
GO_VERSION := $(shell go version | sed 's/go version \(\S*\).*/\1/')
BUILDFLAGS := -ldflags \
  " -X $(METAPKG)/version.Version=$(VERSION)\
    -X $(METAPKG)/version.Revision=$(REV)\
    -X $(METAPKG)/version.Branch=$(BRANCH)\
    -X $(METAPKG)/version.BuildUser=$(USER)\
    -X $(METAPKG)/version.BuildDate=$(BUILD_DATE)\
    -X $(METAPKG)/version.GoVersion=$(GO_VERSION)"

ifeq ($(DEB_HOST_ARCH_CPU),arm)
# Tests in armel take way too long, and run out of memory in armhf.
TESTFLAGS  := -timeout 60m -short
else
TESTFLAGS  := -timeout 20m
endif

%:
	dh $@ --buildsystem=golang --with=golang,systemd \
            --builddirectory=$(BUILDDIR)

override_dh_auto_build:
	dh_auto_build -- $(BUILDFLAGS)

override_dh_auto_test:
	dh_auto_test -- $(TESTFLAGS)

override_dh_auto_install:
	dh_auto_install -- --no-source
