--- a/web/blob/blob.go
+++ b/web/blob/blob.go
@@ -1,7 +1,5 @@
 package blob
 
-//go:generate go-bindata -pkg blob -o files.go -ignore '(.*\.map|bootstrap\.js|bootstrap-theme\.css|bootstrap\.css)'  templates/... static/...
-
 import (
 	"fmt"
 	"io"
@@ -27,11 +25,8 @@
 
 // GetFile retrieves the content of an embedded file.
 func GetFile(bucket string, name string) ([]byte, error) {
-	data, err := Asset(fmt.Sprintf("%s/%s", bucket, name))
-	if err != nil {
-		return nil, err
-	}
-	return data, nil
+	//data, err := Asset(fmt.Sprintf("%s/%s", bucket, name))
+        return nil, fmt.Errorf("could not find %s/%s (embedded blobs disabled)", bucket, name)
 }
 
 // Handler implements http.Handler.
--- a/web/web.go
+++ b/web/web.go
@@ -45,7 +45,6 @@
 	"github.com/prometheus/prometheus/version"
 	"github.com/prometheus/prometheus/web/api/legacy"
 	"github.com/prometheus/prometheus/web/api/v1"
-	"github.com/prometheus/prometheus/web/blob"
 )
 
 var localhostRepresentations = []string{"127.0.0.1", "localhost"}
@@ -97,7 +96,7 @@
 	ListenAddress        string
 	ExternalURL          *url.URL
 	MetricsPath          string
-	UseLocalAssets       bool
+	LocalAssets          string
 	UserAssetsPath       string
 	ConsoleTemplatesPath string
 	ConsoleLibrariesPath string
@@ -157,11 +156,7 @@
 
 	router.Get("/consoles/*filepath", instrf("consoles", h.consoles))
 
-	if o.UseLocalAssets {
-		router.Get("/static/*filepath", instrf("static", route.FileServe("web/blob/static")))
-	} else {
-		router.Get("/static/*filepath", instrh("static", blob.Handler{}))
-	}
+	router.Get("/static/*filepath", instrf("static", route.FileServe(o.LocalAssets+"/static")))
 
 	if o.UserAssetsPath != "" {
 		router.Get("/user/*filepath", instrf("user", route.FileServe(o.UserAssetsPath)))
@@ -294,15 +289,7 @@
 }
 
 func (h *Handler) getTemplateFile(name string) (string, error) {
-	if h.options.UseLocalAssets {
-		file, err := ioutil.ReadFile(fmt.Sprintf("web/blob/templates/%s.html", name))
-		if err != nil {
-			log.Errorf("Could not read %s template: %s", name, err)
-			return "", err
-		}
-		return string(file), nil
-	}
-	file, err := blob.GetFile(blob.TemplateFiles, name+".html")
+	file, err := ioutil.ReadFile(fmt.Sprintf(h.options.LocalAssets+"/templates/%s.html", name))
 	if err != nil {
 		log.Errorf("Could not read %s template: %s", name, err)
 		return "", err
--- a/console_libraries/prom.lib
+++ b/console_libraries/prom.lib
@@ -1,14 +1,13 @@
 {{/* vim: set ft=html: */}}
 {{/* Load Prometheus console library JS/CSS. Should go in <head> */}}
 {{ define "prom_console_head" }}
-<link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/vendor/rickshaw/rickshaw.min.css">
-<link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/vendor/bootstrap-3.3.1/css/bootstrap.min.css">
+<link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/rickshaw/rickshaw.min.css">
+<link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/bootstrap/css/bootstrap.min.css">
 <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/css/prom_console.css">
-<script src="{{ pathPrefix }}/static/vendor/rickshaw/vendor/d3.v3.js"></script>
-<script src="{{ pathPrefix }}/static/vendor/rickshaw/vendor/d3.layout.min.js"></script>
-<script src="{{ pathPrefix }}/static/vendor/rickshaw/rickshaw.min.js"></script>
-<script src="{{ pathPrefix }}/static/vendor/js/jquery.min.js"></script>
-<script src="{{ pathPrefix }}/static/vendor/bootstrap-3.3.1/js/bootstrap.min.js"></script>
+<script src="{{ pathPrefix }}/static/d3/d3.js"></script>
+<script src="{{ pathPrefix }}/static/rickshaw/rickshaw.min.js"></script>
+<script src="{{ pathPrefix }}/static/vendor/jquery/jquery.js"></script>
+<script src="{{ pathPrefix }}/static/bootstrap/js/bootstrap.min.js"></script>
 
 <script>var PATH_PREFIX = "{{ pathPrefix }}";</script>
 <script src="{{ pathPrefix }}/static/js/prom_console.js"></script>
--- a/web/blob/templates/graph.html
+++ b/web/blob/templates/graph.html
@@ -1,20 +1,19 @@
 {{define "head"}}
-    <script src="{{ pathPrefix }}/static/vendor/bootstrap-3.3.1/js/bootstrap.min.js"></script>
+    <script src="{{ pathPrefix }}/static/bootstrap/js/bootstrap.min.js"></script>
 
     <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/css/graph.css">
 
-    <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/vendor/rickshaw/rickshaw.min.css">
-    <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/vendor/bootstrap-datetimepicker/bootstrap-datetimepicker.min.css">
+    <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/rickshaw/rickshaw.min.css">
+    <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/vendor/bootstrap-datetimepicker/bootstrap-datetimepicker.css">
 
-    <script src="{{ pathPrefix }}/static/vendor/rickshaw/vendor/d3.v3.js"></script>
-    <script src="{{ pathPrefix }}/static/vendor/rickshaw/vendor/d3.layout.min.js"></script>
-    <script src="{{ pathPrefix }}/static/vendor/rickshaw/rickshaw.min.js"></script>
+    <script src="{{ pathPrefix }}/static/d3/d3.min.js"></script>
+    <script src="{{ pathPrefix }}/static/rickshaw/rickshaw.min.js"></script>
     <script src="{{ pathPrefix }}/static/vendor/bootstrap-datetimepicker/bootstrap-datetimepicker.js"></script>
-    <script src="{{ pathPrefix }}/static/vendor/bootstrap3-typeahead/bootstrap3-typeahead.min.js"></script>
+    <script src="{{ pathPrefix }}/static/vendor/bootstrap3-typeahead/bootstrap3-typeahead.js"></script>
 
-    <script src="{{ pathPrefix }}/static/vendor/js/handlebars.js"></script>
+    <script src="{{ pathPrefix }}/static/handlebars/handlebars.js"></script>
     <script src="{{ pathPrefix }}/static/vendor/js/jquery.selection.js"></script>
-    <script src="{{ pathPrefix }}/static/vendor/js/jquery.hotkeys.js"></script>
+    <script src="{{ pathPrefix }}/static/jquery-hotkeys/jquery.hotkeys.js"></script>
 
     <script src="{{ pathPrefix }}/static/js/graph.js"></script>
 
--- a/web/blob/templates/_base.html
+++ b/web/blob/templates/_base.html
@@ -3,10 +3,10 @@
   <head>
     <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
     <title>Prometheus Time Series Collection and Processing Server</title>
-    <script src="{{ pathPrefix }}/static/vendor/js/jquery.min.js"></script>
-    <script src="{{ pathPrefix }}/static/vendor/bootstrap-3.3.1/js/bootstrap.min.js"></script>
+    <script src="{{ pathPrefix }}/static/vendor/jquery/jquery.js"></script>
+    <script src="{{ pathPrefix }}/static/bootstrap/js/bootstrap.min.js"></script>
 
-    <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/vendor/bootstrap-3.3.1/css/bootstrap.min.css">
+    <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/bootstrap/css/bootstrap.min.css">
     <link type="text/css" rel="stylesheet" href="{{ pathPrefix }}/static/css/prometheus.css">
 
     <script>
--- a/cmd/prometheus/config.go
+++ b/cmd/prometheus/config.go
@@ -81,9 +81,10 @@
 		&cfg.web.MetricsPath, "web.telemetry-path", "/metrics",
 		"Path under which to expose metrics.",
 	)
-	cfg.fs.BoolVar(
-		&cfg.web.UseLocalAssets, "web.use-local-assets", false,
-		"Read assets/templates from file instead of binary.",
+	cfg.fs.StringVar(
+		&cfg.web.LocalAssets, "web.local-assets",
+                "/usr/share/prometheus/web/",
+		"Path to static assets/templates directory.",
 	)
 	cfg.fs.StringVar(
 		&cfg.web.UserAssetsPath, "web.user-assets", "",
