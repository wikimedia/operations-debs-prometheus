From: Shengjing Zhu <i@zhsj.me>
Date: Thu, 17 Aug 2017 12:11:35 +0800
Subject: Fix build with azure/go-autorest >= 8.0.0

Signed-off-by: Shengjing Zhu <i@zhsj.me>
---
 discovery/azure/azure.go | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)

--- a/discovery/azure/azure.go
+++ b/discovery/azure/azure.go
@@ -319,17 +319,17 @@
 				// This information is available via another API call however the Go SDK does not
 				// yet support this. On deallocated machines, this value happens to be nil so it
 				// is a cheap and easy way to determine if a machine is allocated or not.
-				if networkInterface.Properties.Primary == nil {
+				if networkInterface.Primary == nil {
 					level.Debug(d.logger).Log("msg", "Skipping deallocated virtual machine", "machine", vm.Name)
 					ch <- target{}
 					return
 				}
 
-				if *networkInterface.Properties.Primary {
-					for _, ip := range *networkInterface.Properties.IPConfigurations {
-						if ip.Properties.PrivateIPAddress != nil {
-							labels[azureLabelMachinePrivateIP] = model.LabelValue(*ip.Properties.PrivateIPAddress)
-							address := net.JoinHostPort(*ip.Properties.PrivateIPAddress, fmt.Sprintf("%d", d.port))
+				if *networkInterface.Primary {
+					for _, ip := range *networkInterface.IPConfigurations {
+						if ip.PrivateIPAddress != nil {
+							labels[azureLabelMachinePrivateIP] = model.LabelValue(*ip.PrivateIPAddress)
+							address := net.JoinHostPort(*ip.PrivateIPAddress, fmt.Sprintf("%d", d.port))
 							labels[model.AddressLabel] = model.LabelValue(address)
 							ch <- target{labelSet: labels, err: nil}
 							return
@@ -436,7 +436,7 @@
 }
 
 func mapFromVM(vm compute.VirtualMachine) virtualMachine {
-	osType := string(vm.Properties.StorageProfile.OsDisk.OsType)
+	osType := string(vm.StorageProfile.OsDisk.OsType)
 	tags := map[string]*string{}
 
 	if vm.Tags != nil {
@@ -451,12 +451,12 @@
 		OsType:         osType,
 		ScaleSet:       "",
 		Tags:           tags,
-		NetworkProfile: *(vm.Properties.NetworkProfile),
+		NetworkProfile: *(vm.NetworkProfile),
 	}
 }
 
 func mapFromVMScaleSetVM(vm compute.VirtualMachineScaleSetVM, scaleSetName string) virtualMachine {
-	osType := string(vm.Properties.StorageProfile.OsDisk.OsType)
+	osType := string(vm.StorageProfile.OsDisk.OsType)
 	tags := map[string]*string{}
 
 	if vm.Tags != nil {
@@ -471,14 +471,15 @@
 		OsType:         osType,
 		ScaleSet:       scaleSetName,
 		Tags:           tags,
-		NetworkProfile: *(vm.Properties.NetworkProfile),
+		NetworkProfile: *(vm.NetworkProfile),
 	}
 }
 
 func (client *azureClient) getNetworkInterfaceByID(networkInterfaceID string) (network.Interface, error) {
 	result := network.Interface{}
+	const APIVersion = "2017-03-01"
 	queryParameters := map[string]interface{}{
-		"api-version": client.nic.APIVersion,
+		"api-version": APIVersion,
 	}
 
 	preparer := autorest.CreatePreparer(
--- a/discovery/azure/azure_test.go
+++ b/discovery/azure/azure_test.go
@@ -41,7 +41,7 @@
 		Type:       &vmType,
 		Location:   &location,
 		Tags:       nil,
-		Properties: properties,
+		VirtualMachineProperties: properties,
 	}
 
 	expectedVM := virtualMachine{
@@ -85,7 +85,7 @@
 		Type:       &vmType,
 		Location:   &location,
 		Tags:       &tags,
-		Properties: properties,
+		VirtualMachineProperties: properties,
 	}
 
 	expectedVM := virtualMachine{
@@ -126,7 +126,7 @@
 		Type:       &vmType,
 		Location:   &location,
 		Tags:       nil,
-		Properties: properties,
+		VirtualMachineScaleSetVMProperties: properties,
 	}
 
 	scaleSet := "testSet"
@@ -172,7 +172,7 @@
 		Type:       &vmType,
 		Location:   &location,
 		Tags:       &tags,
-		Properties: properties,
+		VirtualMachineScaleSetVMProperties: properties,
 	}
 
 	scaleSet := "testSet"
