Description: Disable pprof support until dependency is packaged.
Index: prometheus/cmd/promtool/main.go
===================================================================
--- prometheus.orig/cmd/promtool/main.go
+++ prometheus/cmd/promtool/main.go
@@ -14,7 +14,6 @@
 package main
 
 import (
-	"bytes"
 	"context"
 	"encoding/json"
 	"fmt"
@@ -28,8 +27,6 @@ import (
 
 	"gopkg.in/alecthomas/kingpin.v2"
 
-	"github.com/google/pprof/profile"
-	"github.com/pkg/errors"
 	"github.com/prometheus/client_golang/api"
 	"github.com/prometheus/client_golang/api/prometheus/v1"
 	config_util "github.com/prometheus/common/config"
@@ -79,15 +76,15 @@ func main() {
 	querySeriesMatch := querySeriesCmd.Flag("match", "Series selector. Can be specified multiple times.").Required().Strings()
 	querySeriesBegin := querySeriesCmd.Flag("start", "Start time (RFC3339 or Unix timestamp).").String()
 	querySeriesEnd := querySeriesCmd.Flag("end", "End time (RFC3339 or Unix timestamp).").String()
-
 	debugCmd := app.Command("debug", "Fetch debug information.")
+/*
 	debugPprofCmd := debugCmd.Command("pprof", "Fetch profiling debug information.")
 	debugPprofServer := debugPprofCmd.Arg("server", "Prometheus server to get pprof files from.").Required().String()
+*/
 	debugMetricsCmd := debugCmd.Command("metrics", "Fetch metrics debug information.")
 	debugMetricsServer := debugMetricsCmd.Arg("server", "Prometheus server to get metrics from.").Required().String()
 	debugAllCmd := debugCmd.Command("all", "Fetch all debug information.")
 	debugAllServer := debugAllCmd.Arg("server", "Prometheus server to get all debug information from.").Required().String()
-
 	queryLabelsCmd := queryCmd.Command("labels", "Run labels query.")
 	queryLabelsServer := queryLabelsCmd.Arg("server", "Prometheus server to query.").Required().URL()
 	queryLabelsName := queryLabelsCmd.Arg("name", "Label name to provide label values for.").Required().String()
@@ -127,9 +124,10 @@ func main() {
 
 	case querySeriesCmd.FullCommand():
 		os.Exit(QuerySeries(*querySeriesServer, *querySeriesMatch, *querySeriesBegin, *querySeriesEnd, p))
-
+/*
 	case debugPprofCmd.FullCommand():
 		os.Exit(debugPprof(*debugPprofServer))
+*/
 
 	case debugMetricsCmd.FullCommand():
 		os.Exit(debugMetrics(*debugMetricsServer))
@@ -513,6 +511,7 @@ type endpointsGroup struct {
 }
 
 var (
+/*
 	pprofEndpoints = []endpointsGroup{
 		{
 			urlToFilename: map[string]string{
@@ -542,6 +541,7 @@ var (
 			},
 		},
 	}
+*/
 	metricsEndpoints = []endpointsGroup{
 		{
 			urlToFilename: map[string]string{
@@ -549,9 +549,10 @@ var (
 			},
 		},
 	}
-	allEndpoints = append(pprofEndpoints, metricsEndpoints...)
+	allEndpoints = metricsEndpoints
 )
 
+/*
 func debugPprof(url string) int {
 	if err := debugWrite(debugWriterConfig{
 		serverURL:      url,
@@ -563,6 +564,7 @@ func debugPprof(url string) int {
 	}
 	return 0
 }
+*/
 
 func debugMetrics(url string) int {
 	if err := debugWrite(debugWriterConfig{
