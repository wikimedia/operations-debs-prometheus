#!/bin/sh

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
  configure)
    # Add prometheus user
    if ! getent passwd prometheus > /dev/null; then
        adduser --quiet --system --home /var/lib/prometheus --no-create-home \
            --group --gecos "Prometheus daemon" prometheus || true
    fi

    # Move version 1 database aside
    if dpkg --compare-versions "$2" lt-nl 2~ && test -f /var/lib/prometheus/metrics/VERSION && \
        test "$(cat /var/lib/prometheus/metrics/VERSION)" = "1" ; then
        db_get prometheus/remove-version1-database
        if test "$RET" = "true"; then
            echo "Removing old Prometheus 1 metrics database ..."
            rm -rf /var/lib/prometheus/metrics
        fi
    fi

    chown prometheus:prometheus /var/lib/prometheus/metrics2 || true
    chown prometheus:prometheus /var/log/prometheus || true
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    :
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

db_stop

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
